version: "3.7"
services:
  authdb:
    image: postgres:12.2
    container_name: practical-pg-auth
    restart: always
    environment:
      POSTGRES_USER: scalauser
      POSTGRES_PASSWORD: scalapass
      POSTGRES_DB: authdb
      PGDATA: /pgdata
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    ports:
      - "5432:5432"
  eventstoredb:
    image: postgres:12.2
    container_name: practical-pg-eventstore
    restart: always
    environment:
      POSTGRES_USER: scalauser
      POSTGRES_PASSWORD: scalapass
      POSTGRES_DB: eventstoredb
      PGDATA: /pgdata
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    ports:
      - "6432:5432"
  validationdb:
    image: postgres:12.2
    container_name: practical-pg-validation
    restart: always
    environment:
      POSTGRES_USER: scalauser
      POSTGRES_PASSWORD: scalapass
      POSTGRES_DB: validationdb
      PGDATA: /pgdata
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    ports:
      - "7432:5432"
  graphdb:
    image: neo4j:4.2.1
    container_name: practical-neo4j
    restart: always
    environment:
      NEO4J_AUTH: neo4j/neostream
    ports:
      - "7474:7474"
      - "7687:7687"
  rabbitmq:
    image: rabbitmq:3.8-management
    container_name: practical-rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: practical-zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.13-2.6.0
    container_name: practical-kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181